//Whereas enzyme and mocha takes care of actual testing

//Things to be careful of:
//The loaders -- npm install null-loader otherwise Karma would keep looking for JSON to run the code
//Including plugins is important!
//As we start adding more testing files, lines 15 and 18 would change to 'tests.webpack.js'
//which basically loops through the test folder and tests each file with the extension -- ...test.js
const webpack = require('webpack');


module.exports = function(config) {
  config.set({
    browsers: ["Chrome"],
    singleRun: true,
    frameworks: ['mocha'],
    resolve: {
      extensions: ['', '.js', '.scss', '.json']
    },
    files: [
      './spec/test-test.js'
    ],
    preprocessors: {
      // './tests.webpack.js': ['webpack', 'sourcemap'],
      './spec/test-test.js': ['webpack']
    },
    // reporters: [ 'dots' ],
    webpack: {
      module: {
        devtool: 'inline-source-map',
        loaders: [{
          test: /\.jsx?$/,
          loaders: ['babel']
        }, {
          test: /\.json$/,
          loaders: ['null-loader']
        }]
      }
    },
    //this makes sure we don't get a million console logs generated by webpack on initialization
    webpackServer: {
      noInfo: true,
      stats: {
        colors: true,
        hash: false,
        version: false,
        timings: false,
        assets: false,
        chunks: false,
        modules: false,
        reasons: false,
        children: false,
        source: false,
        errors: false,
        errorDetails: false,
        warnings: false,
        publicPath: false
      }
    },
    plugins: [
      'karma-mocha',
      'karma-sourcemap-loader',
      'karma-webpack',
      "karma-chrome-launcher"
    ],
    //watches for changes in the code
    //haven't tested this feature yet
    autoWatch: true
  });
}
